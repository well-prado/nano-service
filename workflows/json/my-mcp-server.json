{
  "name": "Stateless MCP",
  "description": "A revolutionary stateless implementation of the Model Context Protocol",
  "version": "1.0.0",
  "trigger": {
    "http": {
      "method": "*",
      "path": "/:mcp_operation?",
      "accept": "application/json"
    }
  },
  "steps": [
    {
      "name": "filter-request",
      "node": "@nanoservice-ts/if-else",
      "type": "module"
    }
  ],
  "nodes": {
    "filter-request": {
      "conditions": [
        {
          "type": "if",
          "steps": [
            {
              "name": "mcp-ui",
              "node": "mcp-server-ui",
              "type": "module"
            }
          ],
          "condition": "ctx.request.method.toLowerCase() === \"get\" && !ctx.request.params.mcp_operation"
        },
        {
          "type": "if",
          "steps": [
            {
              "name": "mcp-endpoint",
              "node": "mcp-server",
              "type": "module"
            }
          ],
          "condition": "true"
        }
      ]
    },
    "mcp-endpoint": {
      "inputs": {
        "debug_mode": true,
        "tools": [
          {
            "name": "weather",
            "description": "Get weather information for a city",
            "schema": {
              "city": {
                "type": {
                  "type": "string"
                },
                "description": "City name to get weather for"
              }
            },
            "implementation": "return { city: inputs.city, temperature: 22, condition: 'Sunny', humidity: 45 };"
          },
          {
            "name": "calculator",
            "description": "Perform basic arithmetic calculations",
            "schema": {
              "expression": {
                "type": {
                  "type": "string"
                },
                "description": "Mathematical expression to evaluate (e.g., '2 + 3 * 4')"
              }
            },
            "implementation": "try { return { result: eval(inputs.expression) }; } catch (error) { return { error: error.message }; }"
          }
        ]
      }
    },
    "mcp-ui": {
      "inputs": {
        "title": "Stateless MCP Dashboard"
      }
    },
    "method-not-allowed": {
      "inputs": {
        "message": "Invalid HTTP method or function"
      }
    }
  }
} 